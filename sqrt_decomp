from math import sqrt

def sqrt_decmp_sum(a, n):  # this function is going to return new array having sqroot blocks
	sqn = int(sqrt(n))
	sqa = [0] * (sqn + 1)
	for i in range(n):
		sqa[i//sqn] += a[i]
	return sqa

def update_value(array, sq_array, ind, value):  # this function updates the value at given index
	diff = array[ind] - value
	sq_array[ind//sqrtn] += diff
	array[ind] = value



array = list((1, 5, 2, 4, 6, 1, 3, 5, 7, 10))
n = len(array)
sqrtn = int(sqrt(n))
queries = [[3, 8], [1, 6], [8, 8]]
sq_array = sqrt_decmp_sum(array, n)
update_value(array, sq_array, 8, 88)
print(sq_array)
for q in queries:
	l = q[0]
	r = q[1]
	ans = 0
	while l <= r:
		if l % sqrtn == 0 and l + sqrtn <= r:
			ans += sq_array[l//sqrtn]
			l += sqrtn
		else:
			ans += array[l]
			l += 1
	print(ans)
