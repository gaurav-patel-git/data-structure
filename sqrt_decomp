from math import sqrt

def sqrt_decmp(a, n):  # this function is going to return new array having sqroot blocks with block sum
	sqa = []
	sqn = int(sqrt(n))
	rs = sqn
	temp = 0
	for ele in a:
		if rs:
			rs -= 1
			temp += ele
		else:
			sqa.append(temp)
			# print("**")
			rs = sqn - 1
			temp = 0
			temp += ele
		# print(ele, rs, temp)
	sqa.append(temp)
	return sqa


array = list((1, 5, 2, 4, 6, 1, 3, 5, 7, 10))
n = len(array)
sqrtn = int(sqrt(n))
queries = [[3, 8], [1, 6], [8, 8]]
sq_array = sqrt_decmp(array, n)
print(sq_array)
for q in queries:
	l = q[0]
	r = q[1]
	ans = 0
	while l <= r:
		if l % sqrtn == 0 and l + sqrtn <= r:
			ans += sq_array[l//sqrtn]
			l += sqrtn
		else:
			ans += array[l]
			l += 1
	print(ans)
